plugins {
    id 'java-library'
    id 'org.springframework.boot' version "2.7.3" apply false
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
}



apply from: "config.gradle"

allprojects {
    repositories {
        mavenLocal()

        maven { url 'https://maven.aliyun.com/repository/central'}

        maven { url "https://repo.springsource.org/libs-milestone-local"}

        maven { url "https://mvnrepository.com/artifact/"}

        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'org.cris.hospital'
    version '1.0.0'

    jar.enabled = false
    bootJar.enabled = false

    sourceCompatibility = JavaVersion.VERSION_17

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
     dependencies {
         api platform("org.springframework.cloud:spring-cloud-dependencies:${rootProject.ext.springCloudVersion}")

         api platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${rootProject.ext.springCloudAlibabaVersion}")

         api platform("com.alibaba.nacos:nacos-client:${rootProject.ext.nacosVersion}")

         api platform("com.baomidou:mybatis-plus-boot-starter:${rootProject.ext.mybatisPlusBootStarterVersion}")

         api platform("com.mysql:mysql-connector-j:${rootProject.ext.mysqlConnectorVersion}")

         api platform("io.springfox:springfox-swagger2:${rootProject.ext.springfoxSwagger2Version}") //用于生成API接口文档

         api platform("io.springfox:springfox-swagger-ui:${rootProject.ext.springfoxSwaggerUiVersion}")

         api platform("io.jsonwebtoken:jjwt:${rootProject.ext.jjwtVersion}")

         api platform("org.apache.httpcomponents.client5:httpclient5:${rootProject.ext.httpClientVersion}")

         api platform("com.alibaba.fastjson2:fastjson2:${rootProject.ext.fastjsonVersion}")

         api platform("com.alibaba:easyexcel:${rootProject.ext.easyExcelVersion}")

         api platform("com.aliyun:aliyun-java-sdk-core:${rootProject.ext.aliyunSDKVersion}")

         api platform("com.aliyun.oss:aliyun-sdk-oss:${rootProject.ext.aliyunSdkOssVersion}")

         api platform("joda-time:joda-time:${rootProject.ext.jodaTimeVersion}")

         api platform("org.projectlombok:lombok:${rootProject.ext.lombokVersion}")
         testImplementation ('org.springframework.boot:spring-boot-starter-test') {
             exclude group: 'com.vaadin.external.google', module: 'android-json'
         }
         testImplementation 'org.junit.jupiter:junit-jupiter-api'
         testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
     }


    tasks.named('test') {
        useJUnitPlatform()
    }
}


